# Stage 1: Build the Angular app
FROM node:18-alpine AS build

# Set the working directory in the container
WORKDIR /app

# Copy package.json and package-lock.json to the working directory
COPY package*.json ./

# Install project dependencies
RUN npm install

# Copy the rest of the application code to the working directory
COPY . .

# Build the Angular app for production
RUN npm run build --prod

# Stage 2: Serve the app with Nginx
FROM nginx:alpine

# Copy the custom Nginx configuration file
COPY nginx/default.conf /etc/nginx/conf.d/default.conf

# Copy the built Angular app from the previous stage
COPY --from=build /app/dist/admin_ui /usr/share/nginx/html
 
# Expose port 80 for Nginx
EXPOSE 80

# Start Nginx
CMD ["nginx", "-g", "daemon off;"]
 

# Docker build : docker build -f dockerfile.prod -t adhirajk/admin_ui:1.0.2 .

# docker run -p 4200:80 adhirajk/admin_ui:1.0.2

# recheck if this is optimal for tagging and pushing

# docker tag adhirajk/admin_ui:1.0.2 adhirajk/admin_ui:1.0.2

# docker push adhirajk/admin_ui:1.0.2

